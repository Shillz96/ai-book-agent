version: '3.8'

services:
  # Redis for Celery task queue
  redis:
    image: redis:7-alpine
    container_name: ai_book_agent_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Celery worker (optional - can run manually)
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ai_book_agent_celery
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_LOG_LEVEL=info
    volumes:
      - .:/app
      - ./logs:/app/logs
    command: python start_celery.py
    restart: unless-stopped

  # Flower for Celery monitoring (optional)
  flower:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ai_book_agent_flower
    depends_on:
      - redis
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    command: celery -A main.celery_app flower --port=5555 --host=0.0.0.0
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: ai_book_agent_network 